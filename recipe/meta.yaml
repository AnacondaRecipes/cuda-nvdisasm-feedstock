{% set name = "cuda-nvdisasm" %}
{% set version = "12.4.99" %}
{% set cuda_version = "12.4" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_nvdisasm/{{ platform }}/cuda_nvdisasm-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 059d82e2e804269b5f0161c91f6d875262f728c2b3a29c2600eee97a8d85aa13  # [linux64]
  sha256: b2498702b99ed3ec31e65cf5df2a837a88de43a44d39f51091b409aeb76a9b38  # [ppc64le]
  sha256: 83c1ff0fa2c861778ff799726da403d4c65a9c490b5c3761aaf6d47ececa9618  # [aarch64]
  sha256: 6c25db1da8b807f105bde8fe83702370a9141ba3c030ed6e20c25564cad8725c  # [win]

build:
  number: 0
  skip: true  # [osx]
  script:
    - cp -rv bin $PREFIX        # [linux]
    - move bin\* %LIBRARY_BIN%  # [win]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - arm-variant * {{ arm_variant_type }}  # [aarch64]
  host:
    - cuda-version {{ cuda_version }}
  run:
    - {{ pin_compatible("cuda-version", max_pin="x.x") }}
  run_constrained:
    - arm-variant * {{ arm_variant_type }}  # [aarch64]

test:
  commands:
    - test -f $PREFIX/bin/nvdisasm                    # [linux]
    - if not exist %LIBRARY_BIN%\nvdisasm.exe exit 1  # [win]

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: nvdisasm extracts information from standalone cubin files
  description: |
    nvdisasm extracts information from standalone cubin files and presents them in
    human readable format.
  doc_url: https://docs.nvidia.com/cuda/cuda-binary-utilities/

extra:
  recipe-maintainers:
    - conda-forge/cuda
